---
# Note that port needs to be of integer type, else the playbook will fail
- name: Create a target group with instance targets
  community.aws.elb_target_group:
    name: "{{ app_server_target_group }}"
    protocol: http
    port: "{{ app_listener_port | int }}"
    vpc_id: "{{ aws_vpc_id }}"
    health_check_protocol: http
    health_check_path: /
    successful_response_codes: "200"
    targets:
      - Id: "{{ jboss_eap_instance_id[0] }}"
        Port: "{{ app_listener_port | int }}"
      - Id: "{{ jboss_eap_instance_id[1] }}"
        Port: "{{ app_listener_port | int }}"
    region: "{{ aws_region }}"
    state: present

- name: Create Application LB and Attach Listener
  amazon.aws.elb_application_lb:
    name: "{{ app_server_alb }}"
    security_groups:
      - "{{ aws_security_group }}"
    subnets:
      - "{{ aws_vpc_subnet_id_zone_a }}"
      - "{{ aws_vpc_subnet_id_zone_b }}"
    listeners:
      - Protocol: HTTP
        Port: "{{ app_listener_port | int }}"
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ app_server_target_group }}"
    region: "{{ aws_region }}"
    state: present
    wait: true
  register: aws_alb_result

- debug:
    msg: "The Coolstore Application can be accessed via http://{{ aws_alb_result.dns_name }}:{{ app_listener_port }}"

- name: Save AWS ALB Endpoint Info for subsequent workflow
  set_stats:
    data:
      coolstore_app_endpoint: "http://{{ aws_alb_result.dns_name }}:{{ app_listener_port }}"
